# We need to convert the floating IP id to an address for Terraform
- name: Look up floating IP
  include_role:
    name: stackhpc.terraform.infra
    tasks_from: lookup_floating_ip
  vars:
    os_floating_ip_id: "{{ cluster_floating_ip }}"

- name: Set floating IP address fact
  set_fact:
    cluster_floating_ip_address: "{{ os_floating_ip_info.floating_ip_address }}"

- name: Make Terraform project directory
  file:
    path: "{{ terraform_project_path }}"
    state: directory

- name: Template Terraform files into project directory
  template:
    src: "{{ item }}.j2"
    dest: "{{ terraform_project_path }}/{{ item }}"
  loop:
    - outputs.tf
    - providers.tf
    - resources.tf

- name: Install Terraform binary
  include_role:
    name: stackhpc.terraform.install
  vars:
    terraform_binary_directory: "{{ terraform_binary_directory }}"

- name: Provision infrastructure
  include_role:
    name: stackhpc.terraform.infra
  vars:
    terraform_binary_path: "{{ terraform_binary_path }}"
    terraform_state: "{{ cluster_state | default('present') }}"
    terraform_backend_type: "{{ terraform_backend_type }}"
    terraform_backend_config: "{{ terraform_backend_config }}"

# The hosts provisioned by Terraform are put into a primary group by the role
# These tasks then add those hosts to additional groups depending on the selected options
- name: Add cluster hosts to required groups
  add_host:
    name: "{{ item }}"
    groups: "{{ hostvars[item].group_names | stackhpc.terraform.terraform_infra_expand_groups(cluster_groups_required) }}"
  loop: "{{ groups.get('cluster', []) }}"

- name: Add cluster hosts to OOD groups
  add_host:
    name: "{{ item }}"
    groups: "{{ hostvars[item].group_names | stackhpc.terraform.terraform_infra_expand_groups(cluster_groups_ood) }}"
  loop: "{{ groups.get('cluster', []) }}"

- name: Add cluster hosts to monitoring groups
  add_host:
    name: "{{ item }}"
    groups: "{{ hostvars[item].group_names | stackhpc.terraform.terraform_infra_expand_groups(cluster_groups_monitoring) }}"
  loop: "{{ groups.get('cluster', []) }}"

- name: Add cluster hosts to validation groups
  add_host:
    name: "{{ item }}"
    groups: "{{ hostvars[item].group_names | stackhpc.terraform.terraform_infra_expand_groups(cluster_groups_validation) }}"
  loop: "{{ groups.get('cluster', []) }}"
  when: cluster_run_validation | default(false) | bool

- name: Add cluster hosts to Zenith groups
  add_host:
    name: "{{ item }}"
    groups: "{{ hostvars[item].group_names | stackhpc.terraform.terraform_infra_expand_groups(cluster_groups_zenith) }}"
  loop: "{{ groups.get('cluster', []) }}"
  when: zenith_subdomain_monitoring is defined
