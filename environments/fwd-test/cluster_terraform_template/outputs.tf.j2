output "cluster_gateway_ip" {
  description = "The IP address of the gateway used to contact the cluster nodes"
  value       = openstack_networking_floatingip_v2.cluster_floating_ip.address
}

output "cluster_ssh_private_key" {
  description = "The private key used to deploy the cluster"
  value = openstack_compute_keypair_v2.cluster_keypair.private_key
  sensitive = true
}

output "cluster_nodes" {
  description = "A list of the nodes in the cluster from which an Ansible inventory will be populated"
  value       = concat(
    [
      {
        name          = openstack_compute_instance_v2.login.name
        ip            = openstack_compute_instance_v2.login.network[0].fixed_ip_v4
{% if login_sriov_port_id is defined %}
        groups        = ["{{ cluster_name }}_login", "firewalld"],
		secgroup_list = [openstack_networking_secgroup_v2.secgroup_slurm_cluster.id, openstack_networking_secgroup_v2.secgroup_slurm_login.id]        
{% else %}
        groups        = ["{{ cluster_name }}_login"],
{% endif %}
        facts  = {
          openstack_project_id = data.openstack_identity_auth_scope_v3.scope.project_id
        }
      },
      {
        name          = openstack_compute_instance_v2.control.name
        ip            = openstack_compute_instance_v2.control.network[0].fixed_ip_v4
{% if nfs_sriov_port_id is defined %}
        groups        = ["{{ cluster_name }}_control", "firewalld"],
		secgroup_list = [openstack_networking_secgroup_v2.secgroup_slurm_cluster.id]        
{% else %}
        groups        = ["{{ cluster_name }}_control"],
{% endif %}
        facts  = {
          openstack_project_id = data.openstack_identity_auth_scope_v3.scope.project_id
        }
      }
    ],
    {% for partition in openhpc_slurm_partitions %}
    [
      for compute in openstack_compute_instance_v2.{{ partition.name }}: {
        name          = compute.name
        ip            = compute.network[0].fixed_ip_v4
        groups        = ["{{ cluster_name }}_compute", "{{ cluster_name }}_{{ partition.name }}"],
        facts  = {
          openstack_project_id = data.openstack_identity_auth_scope_v3.scope.project_id
        }
      }
    ]{{ ',' if not loop.last }}
    {% endfor %}
  )
}

output "cluster_image" {
  description = "The id of the image used to build the cluster nodes"
  value       = "{{ cluster_previous_image | default(cluster_image) }}"
}

output "required_secgroups" {
  description = "a list of secgroup we need to look up in ansible"
  value       = [ openstack_networking_secgroup_v2.secgroup_slurm_cluster.id, openstack_networking_secgroup_v2.secgroup_slurm_login.id ]
}

